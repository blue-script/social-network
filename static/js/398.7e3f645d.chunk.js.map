{"version":3,"file":"static/js/398.7e3f645d.chunk.js","mappings":"8KACA,GAAgB,UAAY,2BAA2B,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,SAAW,2B,UCO9OA,EAA2B,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACtC,OAAO,gBAAKC,UAAWC,EAAAA,QAAhB,SAA4BF,K,oBCA1BG,EAAuC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,KAC5CC,EAAO,YADmD,EAARC,GAExD,OACI,iBAAKL,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,WACI,gBAAKK,IAAKC,EAAaC,IAAI,iBAC3B,SAAC,KAAD,CAASC,GAAIL,EAAb,SAAoBD,Q,uCCR1BO,GAAcC,EAAAA,EAAAA,GAAiB,IAcrC,GAAeC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,wBAA9C,EAZkE,SAACC,GAC/D,OAAO,kBAAMC,SAAUD,EAAME,aAAchB,UAAWC,EAAAA,SAA/C,WACH,SAACgB,EAAA,EAAD,CACIC,UAAWC,EAAAA,GACXhB,KAAK,iBACLiB,YAAY,qBACZC,SAAU,CAACX,MAEf,2CCeR,EAvB4C,SAACI,GACzC,IAAMQ,EAAkBR,EAAMS,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAACxB,EAAD,CAAuBC,KAAMuB,EAAEvB,KAAME,GAAIqB,EAAErB,IAA1BqB,EAAErB,OACxEsB,EAAmBb,EAAMS,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC/B,EAAD,CAAoBC,QAAS8B,EAAE9B,SAAjB8B,EAAExB,OAM7E,OACI,gBAAKL,UAAWC,EAAAA,UAAhB,UACI,iBAAKD,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKqB,KAEL,iBAAKtB,UAAWC,EAAAA,SAAhB,UACK0B,GACD,SAAC,EAAD,CAAgBZ,SAZV,SAACe,GACnBhB,EAAMiB,YAAYD,EAASE,4B,uCCgBnC,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAdoB,SAACC,GACrB,MAAO,CACHZ,YAAaY,EAAMZ,gBAGA,SAACa,GACxB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASC,EAAAA,EAAAA,mBAAkCL,SAOnDM,EAAAA,EAFJ,CAGEC,I,iIC3BIC,EAAkB,SAACL,GAAD,MAAiD,CACrEM,OAAQN,EAAMO,KAAKD,SAGhB,SAASH,EAAoBK,GAchC,OAAOT,EAAAA,EAAAA,IAAQM,EAARN,EANP,SAA2BpB,GACvB,IAAO2B,EAAwB3B,EAAxB2B,OAAWG,GAAlB,OAA+B9B,EAA/B,GACA,OAAK2B,GACE,SAACE,GAAD,UAAeC,KADF,SAAC,KAAD,CAAUnC,GAAI","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?dc1e","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Dialogs_container__1dJK7\",\"dialogs\":\"Dialogs_dialogs__HR0Co\",\"dialogsItems\":\"Dialogs_dialogsItems__2xKqQ\",\"dialog\":\"Dialogs_dialog__R1EYW\",\"messages\":\"Dialogs_messages__uemcq\",\"message\":\"Dialogs_message__59qrT\",\"sendForm\":\"Dialogs_sendForm__v6uOQ\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\ntype Props = {\r\n    id?: number\r\n    message: string\r\n}\r\n\r\nexport const Message: React.FC<Props> = ({message}) => {\r\n    return <div className={s.message}>{message}</div>\r\n}","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport defaultIcon from \"../../../assets/images/defaultUserPhoto.png\"\r\n\r\nexport type DialogItemType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport const DialogItem: React.FC<DialogItemType> = ({name, id}) => {\r\n    const path = '/dialogs/' + id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src={defaultIcon} alt='defaultIcon'/>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={s.sendForm}>\r\n        <Field\r\n            component={Textarea}\r\n            name=\"newMessageBody\"\r\n            placeholder=\"Enter your message\"\r\n            validate={[maxLength50]}\r\n        />\r\n        <button>send</button>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm<FormDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\n//types\r\nexport type FormDataType = {\r\n    newMessageBody: string\r\n}","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {DialogsPropsType} from './DialogsContainer';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    const messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n    const addNewMessage = (formData: { newMessageBody: string }) => {\r\n        props.sendMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n","import Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {compose, Dispatch} from 'redux';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport React from \"react\";\r\nimport {DialogsPageType} from \"../../types/types\";\r\nimport {dialogsActions} from \"../../redux/dialogs-reducer\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(dialogsActions.sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state: AppRootStateType): mapStatePropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    // class RedirectComponent extends React.Component<any, any> {\r\n    //     render(){\r\n    //         if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n    //         return <Component {...this.props as T}/>\r\n    //     }\r\n    // }\r\n\r\n    function RedirectComponent(props: mapStatePropsType) {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n}"],"names":["Message","message","className","s","DialogItem","name","path","id","src","defaultIcon","alt","to","maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","formData","sendMessage","newMessageBody","compose","connect","state","dispatch","dialogsActions","withAuthRedirect","Dialogs","mapStateToProps","isAuth","auth","Component","restProps"],"sourceRoot":""}